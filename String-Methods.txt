class cs {

    private String s1;


    public cs(String s1) {
        this.s1 = s1;
    }

    public String concat(String s2) {
        return this.s1 + " " + s2;
    }

    public int length() {
        int i = 0;
        for (char c : s1.toCharArray()) {
            i++;
        }
        return i;
    }

    public boolean equals(String s2) {
        if (s1 == s2) {
         return true;
        }
        return false;
    }


    public String lowerCase() {
        String newstring="";
        char[] charArray = s1.toCharArray();
        for (int i = 0; i < s1.length(); i++) {
            if (charArray[i] >= 65 && charArray[i] <= 90) {
                charArray[i] = (char) (charArray[i] + 32);
                newstring+=(char)charArray[i];
            }

        }

        return newstring;
    }

    public String upperCase() {
        String newstring="";
        char[] charArray = s1.toCharArray();
        for (int i = 0; i < s1.length(); i++) {
            if (charArray[i] >= 97 && charArray[i] <= 122) {
                charArray[i] = (char) (charArray[i] - 32);
                newstring+=(char)charArray[i];
            }
        }

        return newstring;
    }



    public boolean empty(){


        {
            if(s1.length() == 0){
                return true;
            }
        }
        return false;
    }

    public int codePoint(int index){
        int b=0;
        char[] charArray = s1.toCharArray();
        for(int i=0;i<s1.length();i++){
            if(i==index){
                int ascii = charArray[i];
                b=ascii;
            }
        }
        return b;
    }

    public int codePointbefore(int index){

        int a=0;
        index=index-1;
        char[] charArray = s1.toCharArray();
        for(int i=0;i<s1.length();i++){
            if(i==index){
                int ascii=charArray[i];
                a=ascii;

            }
        }
        return a;
    }

    public String charAt(int index){
        String ts="";
        char[] charArray=s1.toCharArray();
        for(int i=0;i<s1.length();i++){
            if(i==index){
                ts+=charArray[i];
            }

        }
       return ts;
    }

    public int codePointcount(int index1,int index2){

        int count = 0;
        char[]charArray=s1.toCharArray();
        for(int i=index1;i<index2;i++){
            count++;

        }
        return count;
    }
    public String subString(int index1,int index2){
        String ts="";
        char[]s1char = s1.toCharArray();
        for(int i=index1;i<=index2;i++){
            ts+=(s1char[i]);
        }
        return ts;
    }

    public int indexOf(char nc){
        for (int i = 0; i <s1.length() ; i++) {
            char[]s1char=s1.toCharArray();
            if (s1char[i] == nc) {
             return i;
            }
        }
        return 0;
    }

    public boolean endsWith(String s2){
        char[]s1char=s1.toCharArray();
        char[]s2char=s2.toCharArray();
        if(s1char.length< s2char.length){
            return false;
        }
        int i= s1char.length- s2char.length;
        for(int j=0;j< s2char.length;j++){
            if(s2char[j]==s1char[i]){
                i++;
                continue;
            }
            return false;
        }
        return true;
    }
    public boolean startsWith(String s2){
        char[]s1char=s1.toCharArray();
        char[]s2char=s2.toCharArray();
        if(s1char.length< s2char.length){
            return false;
        }
        int i= 0;
        for(int j=0;j< s2char.length;j++){
            if(s2char[j]==s1char[i]){
                i++;
                continue;
            }
            return false;
        }
        return true;
    }



    public String trim(){
        int a = s1.length();
        int b=0;
        String j="";
        while(b<a && s1.charAt(b)==' '){
            b++;
        }
        while(a>b && s1.charAt(a-1)==' '){
            a--;
        }
        j=a>b ? s1.substring(b,a):"";
        return j;
    }

    public int compareTo(String s2){
        int c = 0;
        for (int i = 0; i<s1.length() && i<s2.length(); i++){
            int a = s1.charAt(i);
            int b = s2.charAt(i);
            if(a < b){
                c = 1;
            }
            else {
                c = 0;
            }
        }
        return c;
    }
    }